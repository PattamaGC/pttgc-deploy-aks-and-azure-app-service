name: Build workflow
on: 
  push:
    branches:
      - dev

jobs:
  unittest:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Setup .Net Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1
      - name: Install dependencies
        run: dotnet restore
      - name: Build 
        run: dotnet build --configuration Release --no-restore
      - name: Test 
        run: dotnet test --no-restore --verbosity normal

  ## Add CodeQL Scanning here before we build docker image
  ##
  ##

  sourcecode-scanning:
    name: Scan source code with CodeQL 
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        language: ['csharp']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initial CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  containerized:
    name: Build Docket Image 
    runs-on: ubuntu-latest
    needs:
      - unittest
      - sourcecode-scanning

    steps:
      - name: Checkout Source code 
        uses: actions/checkout@v3
        
      - name: Run docker build
        run: docker build . --file Dockerfile --tag repo-name/simple-service:${{ github.sha }}

  deploy-aks:
    name: Deploy to Dev Slot
    runs-on: ubuntu-latest
    needs: containerized

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Get K8S context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
        id: login 
      - name: Deploy Application
        uses: azure/k8s-deploy@v3
        with:
          manifests: ./manifest/deployment.yaml
          images: |
            ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}:${{ github.SHA }}

